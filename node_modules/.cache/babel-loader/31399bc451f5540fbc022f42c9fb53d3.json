{"ast":null,"code":"var _jsxFileName = \"/Users/nadiia/Documents/GitHub/goit-react-hw-01-components/src/components/Transactions/Transactions.jsx\";\nimport PropTypes from 'prop-types';\nimport { TransactionTable, TableRow, TableBody, TableBodyRow } from './Transactions.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  let {\n    transactions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TableBody, {\n    children: [transactions.map(transaction => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableBodyRow, {\n          children: transaction.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBodyRow, {\n          children: transaction.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBodyRow, {\n          children: transaction.currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    }), '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Transactions;\nTransactionTable.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.string.isRequired,\n    currensy: PropTypes.string.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-01-components/src/components/Transactions/Transactions.jsx"],"names":["PropTypes","TransactionTable","TableRow","TableBody","TableBodyRow","Transactions","transactions","map","transaction","type","amount","currency","id","propTypes","arrayOf","shape","string","isRequired","currensy"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,gBADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,YAJF,QAKO,uBALP;;AAMA,OAAO,MAAMC,YAAY,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAChD,sBACE,QAAC,SAAD;AAAA,eACGA,YAAY,CAACC,GAAb,CAAiBC,WAAW,IAAI;AAC/B,0BACE,QAAC,QAAD;AAAA,gCACE,QAAC,YAAD;AAAA,oBAAeA,WAAW,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAA,oBAAeD,WAAW,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,YAAD;AAAA,oBAAeF,WAAW,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAeH,WAAW,CAACI,EAA3B;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CADH,EAUG,EAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfM;KAAMP,Y;AAgBbJ,gBAAgB,CAACY,SAAjB,GAA6B;AAC3BP,EAAAA,YAAY,EAAEN,SAAS,CAACc,OAAV,CACZd,SAAS,CAACe,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEdR,IAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBC,UAFT;AAGdP,IAAAA,MAAM,EAAEV,SAAS,CAACgB,MAAV,CAAiBC,UAHX;AAIdC,IAAAA,QAAQ,EAAElB,SAAS,CAACgB,MAAV,CAAiBC;AAJb,GAAhB,CADY;AADa,CAA7B","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  TransactionTable,\n  TableRow,\n  TableBody,\n  TableBodyRow,\n} from './Transactions.styled';\nexport const Transactions = ({ transactions }) => {\n  return (\n    <TableBody>\n      {transactions.map(transaction => {\n        return (\n          <TableRow key={transaction.id}>\n            <TableBodyRow>{transaction.type}</TableBodyRow>\n            <TableBodyRow>{transaction.amount}</TableBodyRow>\n            <TableBodyRow>{transaction.currency}</TableBodyRow>\n          </TableRow>\n        );\n      })}\n      {''}\n    </TableBody>\n  );\n};\nTransactionTable.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currensy: PropTypes.string.isRequired,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}