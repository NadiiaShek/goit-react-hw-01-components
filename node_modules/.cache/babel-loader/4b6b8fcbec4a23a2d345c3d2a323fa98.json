{"ast":null,"code":"var _jsxFileName = \"/Users/nadiia/Documents/GitHub/goit-react-hw-01-components/src/components/Profile/Profile.jsx\";\nimport PropTypes from 'prop-types';\nimport { Profile, Description, Avatar, Name, Tag, Location, Label, Quantity, Stats, StatsItem } from './Profile.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfileCard = _ref => {\n  let {\n    username,\n    tag,\n    location,\n    avatar,\n    stats: {\n      followers,\n      views,\n      likes\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Profile, {\n    children: [/*#__PURE__*/_jsxDEV(Description, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: \"User avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"@\", tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      children: [/*#__PURE__*/_jsxDEV(StatsItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quantity, {\n          children: followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Views\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quantity, {\n          children: views\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatsItem, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Quantity, {\n          children: likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, tag, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileCard;\nProfileCard.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"sources":["/Users/nadiia/Documents/GitHub/goit-react-hw-01-components/src/components/Profile/Profile.jsx"],"names":["PropTypes","Profile","Description","Avatar","Name","Tag","Location","Label","Quantity","Stats","StatsItem","ProfileCard","username","tag","location","avatar","stats","followers","views","likes","propTypes","string","isRequired","exact","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,QANF,EAOEC,KAPF,EAQEC,QARF,EASEC,KATF,EAUEC,SAVF,QAWO,kBAXP;;AAaA,OAAO,MAAMC,WAAW,GAAG,QAMrB;AAAA,MANsB;AAC1BC,IAAAA,QAD0B;AAE1BC,IAAAA,GAF0B;AAG1BC,IAAAA,QAH0B;AAI1BC,IAAAA,MAJ0B;AAK1BC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB;AALmB,GAMtB;AACJ,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,MAAb;AAAqB,QAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,kBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,GAAD;AAAA,wBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD;AAAA,kBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAAcN,GAAd;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAhCM;KAAMF,W;AAiCbA,WAAW,CAACS,SAAZ,GAAwB;AACtBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,MAAV,CAAiBC,UADL;AAEtBT,EAAAA,GAAG,EAAEb,SAAS,CAACqB,MAAV,CAAiBC,UAFA;AAGtBR,EAAAA,QAAQ,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,UAHL;AAItBP,EAAAA,MAAM,EAAEf,SAAS,CAACqB,MAAV,CAAiBC,UAJH;AAKtBN,EAAAA,KAAK,EAAEhB,SAAS,CAACuB,KAAV,CAAgB;AACrBN,IAAAA,SAAS,EAAEjB,SAAS,CAACwB,MAAV,CAAiBF,UADP;AAErBJ,IAAAA,KAAK,EAAElB,SAAS,CAACwB,MAAV,CAAiBF,UAFH;AAGrBH,IAAAA,KAAK,EAAEnB,SAAS,CAACwB,MAAV,CAAiBF;AAHH,GAAhB;AALe,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Profile,\n  Description,\n  Avatar,\n  Name,\n  Tag,\n  Location,\n  Label,\n  Quantity,\n  Stats,\n  StatsItem,\n} from './Profile.styled';\n\nexport const ProfileCard = ({\n  username,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => {\n  return (\n    <Profile key={tag}>\n      <Description>\n        <Avatar src={avatar} alt=\"User avatar\" />\n        <Name>{username}</Name>\n        <Tag>@{tag}</Tag>\n        <Location>{location}</Location>\n      </Description>\n\n      <Stats>\n        <StatsItem>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </StatsItem>\n        <StatsItem>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </StatsItem>\n      </Stats>\n    </Profile>\n  );\n};\nProfileCard.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};"]},"metadata":{},"sourceType":"module"}